{%- liquid
  assign current_product = product 
  assign block = block 
  assign list_variant = current_product.metafields.custom.product_list_for_tastes.value 
  assign extra_index = 0

  assign productSellingObj = current_product.selected_or_first_available_variant.selling_plan_allocations

  for item_prop in productSellingObj
    assign productPriceSelling = item_prop.price
  endfor
  

  assign cart_quantity = 0
  assign cart_quantity_sub = 0
  assign id_variant = ""
  for product in settings.product_list_gel
    for variant in product.variants
      assign id_variant = id_variant | append: variant.id
    endfor
  endfor

  for line_item in cart.items
    if id_variant contains line_item.id
      if line_item.selling_plan_allocation != blank
        assign cart_quantity_sub = cart_quantity_sub | plus: line_item.quantity 
      else
        assign cart_quantity = cart_quantity | plus: line_item.quantity  
      endif
    endif
  endfor
-%}

{{ "product-list-gel.css" | asset_url | stylesheet_tag }}
<div class="list_variants-quantity varian__quantity">
  {% if block.heading_option %}
  <h2 class="product_title-option">{{- block.heading_option -}}</h2>
  {% endif %}
  <div class="varian__quantity-grid">
    {% for i in (1..4) %}
      {%- comment -%}Quantity{%- endcomment -%}
      {%- capture name_quantity -%}name_quantity_{{i}}{%- endcapture -%}
      {%- capture image_quantity -%}image_quantity_{{i}}{%- endcapture -%}
      {%- capture value_quantity -%}value_quantity_{{i}}{%- endcapture -%}

      {%- comment -%}Exta setting for Quantity{%- endcomment -%}
      {%- capture ex_name_quantity -%}ex_name_quantity_{{i}}{%- endcapture -%}
      {%- capture extra_image_quantity -%}extra_image_quantity_{{i}}{%- endcapture -%}

      {%- comment -%}Setting for badge{%- endcomment -%}
      {%- capture text_badge -%}text_badge_{{i}}{%- endcapture -%}
      {%- capture bg_color -%}bg_color_{{i}}{%- endcapture -%}
      {%- capture text_color -%}text_color_{{i}}{%- endcapture -%}

      {%- comment -%}Extra setting for badge{%- endcomment -%}
      {%- capture ex_text_badge -%}ex_text_badge_{{i}}{%- endcapture -%}
      {%- capture ex_bg_color -%}ex_bg_color_{{i}}{%- endcapture -%}
      {%- capture ex_text_color -%}ex_text_color_{{i}}{%- endcapture -%}

      {%- liquid 
        assign init_first_element = 1
        assign index = forloop.index
        assign name_option = block[name_quantity]
        assign image_option = block[image_quantity]
        assign value_option = block[value_quantity]

        assign ex_name_option = block[ex_name_quantity]
        assign ex_image_option = block[extra_image_quantity]

        assign text_badge_option = block[text_badge]
        assign bg_color_option = block[bg_color]
        assign text_color_option = block[text_color]

        assign ex_text_badge_option = block[ex_text_badge]
        assign ex_bg_color_option = block[ex_bg_color]
        assign ex_text_color_option = block[ex_text_color]
      -%}

      {% if name_option != empty and image_option != empty and value_option != 0  %}
        <div class="varian__quantity-item varian__quantity-item--{{index}}">
          {% if ex_text_badge_option != blank %}
            <span class="varian__quantity-ex-badge" style="--color-text: {{ex_text_color_option}}; --background-color: {{ex_bg_color_option}}">{{- ex_text_badge_option -}}</span>
          {% endif %}
          <input type="radio" {% if index == 1 %} checked {% endif %} name="varian-quantity" value="{{value_option}}" id="varian-quantity-{{index}}">
          <label for="varian-quantity-{{index}}">
              {% if ex_image_option != empty and ex_name_option != blank  %}
              <div class="varian__quantity-free">
                <div class="varian__quantity-elem">
                  {% if text_badge_option != blank %}
                  <span class="varian__quantity-badge" style="--color-text: {{text_color_option}}; --background-color: {{bg_color_option}}">{{- text_badge_option -}}</span>
                  {% endif %}
                  <div class="varian__quantity-img">
                    {{
                      image_option | image_url: width: master | image_tag: widths: '100,200,300',
                      alt:image_option.alt | default: "",
                      loading: 'lazy'
                    }}
                  </div>
                  <span class="varian__quantity-name">{{- name_option -}}</span>
                </div>
                <span class="varian__quantity-symbol">+</span>
                <div class="varian__quantity-elem varian__quantity-ex-elem">
                  <span class="varian__quantity-free-badge">FREE</span>
                  <div class="varian__quantity-img">
                    {{
                      ex_image_option | image_url: width: master | image_tag: widths: '100,200,300',
                      alt:ex_image_option.alt | default: "",
                      loading: 'lazy'
                    }}
                  </div>
                  <span class="varian__quantity-name">{{- ex_name_option -}}</span>
                </div>
              </div>
              {% else %}
              <div class="varian__quantity-elem">
                {% if text_badge_option != blank %}
                <span class="varian__quantity-badge" style="--color-text: {{text_color_option}}; --background-color: {{bg_color_option}}">{{- text_badge_option -}}</span>
                {% endif %}
                <div class="varian__quantity-img">
                  {{
                    image_option | image_url: width: master | image_tag: widths: '100,200,300',
                    alt:image_option.alt | default: "",
                    loading: 'lazy'
                  }}
                </div>
                <span class="varian__quantity-name">{{- name_option -}}</span>
              </div>
       
              {% endif %}

          </label>
        </div>
      {% endif %}

    {% endfor %}
  </div>
</div>
<div class="list_variants-wrapper" id="list-variants-wrapper-scroll">
  {% if block.heading != empty %}
  <h2 class="list_variants-title">
    <span>{{block.heading}}</span>
    {% if block.little_badge != empty %}
    <span class="small-badge">{{block.little_badge}}</span>
    {% endif %}
  </h2>
  {% endif %}  

   {% if text_under_delivery != blank %}
  <div class="taste-delivery-badge">
      <span>{{- text_under_delivery -}}</span>
    </div>
  {% endif %}

  <div class="list_variants-grid">
    <input 
      type="hidden" 

      data-max-selected="{{init_first_element}}"
      data-full-price  
      data-main-product="0"
      data-general-quantity="0" 

      data-cart-quantity="{{cart_quantity}}" 
      data-cart-quantity-sub="{{cart_quantity_sub}}"

      data-value-sub="{{productPriceSelling}}" 
      data-value="{{current_product.price}}" 
      data-price-sub="{{productPriceSelling}}" 

      data-general-quantity="{{productPriceSelling | divided_by: 100.0 }}"
      value="{{current_product.price}}"  
      data-subscribe="true" 
      data-select-variant="false" 
    >
    {% for item in list_variant %}
    {%- capture key_img -%}image_{{forloop.index}}{%- endcapture -%}

      {%- liquid
        assign index = forloop.index
        assign extra_index = extra_index | plus: 1
        assign current_variant = item 
        assign product_title = current_variant.product.title 
        assign product_badge = current_variant.product.metafields.custom.badge_bestseller 
        assign priceSellingObj = current_variant.selling_plan_allocations
        for item in priceSellingObj
        assign priceSelling = item.price | divided_by: 100.0
        endfor
        if current_variant.product.metafields.custom.featured_image_for_taste != blank
          assign product_img = current_variant.product.metafields.custom.featured_image_for_taste
        else
          assign product_img = current_variant.product.featured_image 
        endif
        assign variant_available = current_variant.available 
        assign variant_price = current_variant.price | divided_by: 100.0
        assign variant_id = current_variant.id 
        for tag in current_variant.product.tags
          assign tag_lower_case = tag | downcase
          if tag_lower_case == "new"
            assign new_variant = true  
            break
          else
            assign new_variant = false  
          endif
        endfor
        assign isSelling_plan = current_variant.selling_plan_allocations 

      -%}
      {% if variant_available and isSelling_plan != blank %}
        <variant-item class="variant_item {{classToggleMode}}">
          <script data-json type="application/json">{{current_variant | json }}</script>
          <script data-json-product type="application/json">{{current_variant.product | json }}</script>
          <input type="hidden" data-quantity name="items[{{index}}][quantity]" value="0">
          <input type="hidden" data-variant-id  name="items[{{index}}][id]" value="{{variant_id}}">
          <input type="hidden" data-selling name="items[{{index}}][selling_plan]" value="">
          <input type="hidden" data-price name="price" data-value="{{variant_price}}" value="0">
          <input type="hidden" data-price-selling name="price-selling" data-value="{{priceSelling}}" value="0">
          <input 
            data-ver-id
            type="hidden" 
            data-cart-el="{{current_variant.product.id}}" 
            data-key-cart=""
            value="0" 
            data-change="false" 
            data-old-variant=""
            data-new-variant=""
          >
          <input 
            data-ver-id-sub
            type="hidden" 
            data-cart-el-sub="{{current_variant.product.id}}"
            data-key-cart=""
            data-selling-plan-id="" 
            value="0" 
            data-change="false" 
            data-old-variant=""
            data-new-variant=""
          >
          <div class="variant_item-img-wrap">
            <img class="variant_item-img" 
              src="{{product_img | img_url: 'master'}}" 
              alt="{{product_title}}" 
              loading="lazy"
            >

          </div>
          <h3 class="variant_item-title">
            {%- assign title_down = product_title | downcase -%}
            {{- product_title | capitalize -}}
          </h3>
          {% if product_badge %}
            <span class="variant_item-badge">{{- product_badge -}}</span>
          {% endif %}
            <button class="variant_item-button" name="button">
              <span>add</span>
              <span class="variant_item-button-plus"> +</span>
            </button>
            <div class="variant_item-quantity" name="selector">
              <button name="minus">-</button>
              <input type="number" value="0" min="0" step="">
              <button name="plus">+</button>
            </div>
        </variant-item>
      {% endif %}
    {% endfor %}
</div>

</div>

{{ "variant-item-gel.js" | asset_url | script_tag }}
{{ "change-price-gel.js" | asset_url | script_tag }}

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const buttonAddToCart = document.querySelector(".product__block-button_price .product__submit__add");
    const stickyBtnAdd = document.querySelector(".product-button-sticky-add");
    const stickyBtnScroll = document.querySelector(".product-button-sticky-scroll");
    const contentRecharge = document.querySelector(".recharge-content");
    const productWrapper = document.querySelector(".product-single__wrapper");
      
    const handleAddToCartClick = () => {
      if (buttonAddToCart.disabled === false) {
        buttonAddToCart.click();
      }
    };
      
    const handleScrollButtonClick = () => {
      const scrollToElement = document.querySelector(`#${stickyBtnScroll.dataset.scroll}`);
      if (scrollToElement) {
        const y = scrollToElement.offsetParent.offsetTop;
        window.scrollTo({ top: y, behavior: "smooth" });
      }
      };
      
    const handleWindowScroll = () => {
      const currentPos = window.pageYOffset;
      const stopPoint = contentRecharge?.offsetTop - (contentRecharge?.scrollHeight * 2.5);
      
      stickyBtnAdd?.classList.toggle("is-show", currentPos < stopPoint && !buttonAddToCart.disabled);
      stickyBtnScroll?.classList.toggle("is-show", currentPos > productWrapper.clientHeight);
      };
      
    if (stickyBtnAdd) {
      stickyBtnAdd.addEventListener("click", handleAddToCartClick);
    }
      
    if (stickyBtnScroll) {
      stickyBtnScroll.addEventListener("click", handleScrollButtonClick);
    }
      
    if (window.innerWidth < 768) {
        window.addEventListener("scroll", handleWindowScroll);
    }
  })
</script>